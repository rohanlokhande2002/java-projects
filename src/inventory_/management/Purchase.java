/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventory_.management;

import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Lenovo
 */
public class Purchase extends javax.swing.JFrame {

    /**
     * Creates new form Purchase
     */
    public Purchase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        edtID = new javax.swing.JTextField();
        edtName = new javax.swing.JTextField();
        edtPrice = new javax.swing.JTextField();
        edtQuan = new javax.swing.JTextField();
        btnAddCart = new rojerusan.RSMaterialButtonRectangle();
        btnBuy = new rojerusan.RSMaterialButtonRectangle();
        btnBack = new rojerusan.RSMaterialButtonRectangle();
        btnRemove = new rojerusan.RSMaterialButtonRectangle();
        btnUpdate = new rojerusan.RSMaterialButtonRectangle();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProdTable = new rojeru_san.complementos.RSTableMetro();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CartTable = new rojeru_san.complementos.RSTableMetro();
        edtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnShowProducts = new rojerusan.RSMaterialButtonRectangle();
        edtShowCart = new rojerusan.RSMaterialButtonRectangle();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edtID.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        edtID.setText("     Product ID");
        edtID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 153, 153)));
        edtID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtIDFocusLost(evt);
            }
        });
        edtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtIDActionPerformed(evt);
            }
        });
        jPanel2.add(edtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 250, 50));

        edtName.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        edtName.setText("     Product Name");
        edtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 153, 153)));
        edtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtNameFocusLost(evt);
            }
        });
        edtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtNameActionPerformed(evt);
            }
        });
        jPanel2.add(edtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 250, 50));

        edtPrice.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        edtPrice.setText("     Price");
        edtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 153, 153)));
        edtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtPriceFocusLost(evt);
            }
        });
        edtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtPriceActionPerformed(evt);
            }
        });
        jPanel2.add(edtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 250, 50));

        edtQuan.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        edtQuan.setText("     Quantity");
        edtQuan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 153, 153)));
        edtQuan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtQuanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtQuanFocusLost(evt);
            }
        });
        edtQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtQuanActionPerformed(evt);
            }
        });
        jPanel2.add(edtQuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 250, 50));

        btnAddCart.setBackground(new java.awt.Color(0, 153, 255));
        btnAddCart.setText("ADD TO CART");
        btnAddCart.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnAddCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddCartMouseClicked(evt);
            }
        });
        btnAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCartActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 160, 70));

        btnBuy.setBackground(new java.awt.Color(0, 102, 255));
        btnBuy.setText("Purchase");
        btnBuy.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        jPanel2.add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 160, 70));

        btnBack.setBackground(new java.awt.Color(0, 102, 255));
        btnBack.setText("Back");
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel2.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 630, 160, -1));

        btnRemove.setBackground(new java.awt.Color(0, 153, 255));
        btnRemove.setText("REMOVE  CART");
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 160, -1));

        btnUpdate.setBackground(new java.awt.Color(0, 102, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 540, 160, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 730));

        jPanel3.setBackground(new java.awt.Color(0, 204, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 20), new java.awt.Color(255, 255, 153))); // NOI18N
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        ProdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prod ID", "Prod Name", "Quan", "Price"
            }
        ));
        ProdTable.setColorBackgoundHead(new java.awt.Color(0, 102, 255));
        ProdTable.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        ProdTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        ProdTable.setColorFilasBackgound2(new java.awt.Color(0, 204, 204));
        ProdTable.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        ProdTable.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        ProdTable.setFuenteFilas(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ProdTable.setFuenteFilasSelect(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ProdTable.setGridColor(new java.awt.Color(255, 255, 255));
        ProdTable.setRowHeight(30);
        ProdTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProdTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProdTable);
        if (ProdTable.getColumnModel().getColumnCount() > 0) {
            ProdTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            ProdTable.getColumnModel().getColumn(1).setPreferredWidth(110);
        }

        jPanel4.add(jScrollPane1);

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 430, 320));

        jPanel5.setBackground(new java.awt.Color(51, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Cart", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 20), new java.awt.Color(255, 255, 153))); // NOI18N
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prod ID", "Prod Name", "Prod Price", "Quantity", " Amount"
            }
        ));
        CartTable.setColorBackgoundHead(new java.awt.Color(0, 102, 255));
        CartTable.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        CartTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        CartTable.setColorFilasBackgound2(new java.awt.Color(0, 204, 204));
        CartTable.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        CartTable.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        CartTable.setGridColor(new java.awt.Color(255, 255, 255));
        CartTable.setRowHeight(30);
        CartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(CartTable);
        if (CartTable.getColumnModel().getColumnCount() > 0) {
            CartTable.getColumnModel().getColumn(0).setPreferredWidth(45);
            CartTable.getColumnModel().getColumn(1).setPreferredWidth(140);
            CartTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        jPanel5.add(jScrollPane2);

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 610, 320));

        edtSearch.setFont(new java.awt.Font("Segoe UI Historic", 0, 20)); // NOI18N
        edtSearch.setForeground(new java.awt.Color(102, 102, 102));
        edtSearch.setText("    Search");
        edtSearch.setBorder(null);
        edtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtSearchFocusLost(evt);
            }
        });
        edtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtSearchActionPerformed(evt);
            }
        });
        edtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edtSearchKeyTyped(evt);
            }
        });
        jPanel3.add(edtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 210, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inventory/devices.png"))); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 200, 210));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inventory/shopping.png"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 210));

        btnShowProducts.setBackground(new java.awt.Color(0, 102, 255));
        btnShowProducts.setText("SHOW Products");
        btnShowProducts.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnShowProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnShowProductsMouseClicked(evt);
            }
        });
        btnShowProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowProductsActionPerformed(evt);
            }
        });
        jPanel3.add(btnShowProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 160, 60));

        edtShowCart.setBackground(new java.awt.Color(0, 102, 255));
        edtShowCart.setText("Show Cart");
        edtShowCart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        edtShowCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtShowCartActionPerformed(evt);
            }
        });
        jPanel3.add(edtShowCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 290, 150, 60));

        jLabel3.setFont(new java.awt.Font("Stencil", 0, 55)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("buyer's ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 250, 100));

        jLabel4.setFont(new java.awt.Font("Stencil", 0, 58)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 255));
        jLabel4.setText("PARADIsE");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 290, 80));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 1120, 730));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void edtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtPriceActionPerformed

    private void edtQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtQuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtQuanActionPerformed

    private void edtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtNameActionPerformed

    private void edtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtSearchActionPerformed

    private void edtIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtIDFocusGained
        // TODO add your handling code here:
        if(edtID.getText().equals("     Product ID")){
            
            edtID.setText("");
        }
    }//GEN-LAST:event_edtIDFocusGained

    private void edtIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtIDFocusLost
        // TODO add your handling code here:
        if(edtID.getText().equals("")){
            
            edtID.setText("     Product ID");
        }
    }//GEN-LAST:event_edtIDFocusLost

    private void edtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtNameFocusGained
        // TODO add your handling code here:
         if(edtName.getText().equals("     Product Name")){
            
            edtName.setText("");
        }
        
    }//GEN-LAST:event_edtNameFocusGained

    private void edtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtNameFocusLost
        // TODO add your handling code here:
         if(edtName.getText().equals("")){
            
            edtName.setText("     Product Name");
        }
    }//GEN-LAST:event_edtNameFocusLost

    private void edtPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtPriceFocusGained
        // TODO add your handling code here:
        if(edtPrice.getText().equals("     Price")){
            
            edtPrice.setText("");
        }
    }//GEN-LAST:event_edtPriceFocusGained

    private void edtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtPriceFocusLost
        // TODO add your handling code here:
        if(edtPrice.getText().equals("")){
            
            edtPrice.setText("     Price");
        }
    }//GEN-LAST:event_edtPriceFocusLost

    private void edtQuanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtQuanFocusGained
        // TODO add your handling code here:
         if(edtQuan.getText().equals("     Quantity")){
            
            edtQuan.setText("");
        }
    }//GEN-LAST:event_edtQuanFocusGained

    private void edtQuanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtQuanFocusLost
        // TODO add your handling code here:
         if(edtQuan.getText().equals("")){
            
            edtQuan.setText("     Quantity");
        }
    }//GEN-LAST:event_edtQuanFocusLost

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        Dashboard Back = new Dashboard();
        Back.show();
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    public void Connection(){
    
    }
    
    
    private void btnAddCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCartMouseClicked
        // TODO add your handling code here:
        
        String ProductID = edtID.getText();
        String ProductName = edtName.getText();
        String Price = edtPrice.getText();
        String Quantity = edtQuan.getText();
       
        
        int ID = (Integer.parseInt(edtID.getText()));
        String ProdName = edtName.getText();
        int ProdQuan = (Integer.parseInt(edtQuan.getText()));
        int ProdPrice = (Integer.parseInt(edtPrice.getText()));
        int ProdTotal = (Integer.parseInt(edtPrice.getText())) * (Integer.parseInt(edtQuan.getText()));
        String Total = Integer.toString(ProdTotal);
        
        
        if(ProdQuan>0){
        
            
            try{
            
             Class.forName("com.mysql.cj.jdbc.Driver");
             Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement","root","Rohan@2002");
//             Statement smt3=con.createStatement();
//             String query5 = "update product_info set Quantity = (Quantity-VirtualQuantity) where (Quantity > 0) and ((Quantity-VirtualQuantity) > 0)";
             String query6 = "update  product_info set VirtualQuantity = ? where ProductID = ?";
             PreparedStatement pst = con.prepareStatement(query6);
             pst.setInt(1, ProdQuan);
             pst.setInt(2, ID);
             pst.executeUpdate();
//         

//            pstm.executeUpdate();
             String query5 = "update product_info set Quantity = (Quantity-VirtualQuantity) where ((Quantity > 0) and ((Quantity-VirtualQuantity) > 0 )) and ProductID = ?";
             PreparedStatement pstmt = con.prepareStatement(query5);
             pstmt.setInt(1, ID);
             pstmt.executeUpdate();
//            pstmt.setInt(1, Quan);
//            pstmt.setInt(2, ID);
             
             
                
            
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Purchase.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
        
        
        
        
        if(edtID.getText().equals("") || edtName.getText().equals("")|| edtPrice.getText().equals("") || edtQuan.getText().equals("")){
                 JOptionPane.showMessageDialog(this, "Plese Enter All Details");
        }
        
        else{
        try{
             Class.forName("com.mysql.cj.jdbc.Driver");
             Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement","root","Rohan@2002");
             Statement smt3=con.createStatement();
             String query4 = "insert into carttable values('"+ID+"','"+ProdName+"','"+ProdPrice+"','"+ProdQuan+"','"+ProdTotal+"')";
 
               int success = smt3.executeUpdate(query4);
                            if(success==1)
                            {
//                                JOptionPane.showMessageDialog(this, "Product Successfully Added ");
                                
                                    String data[] = {ProductID,ProductName,Price,Quantity,Total};
                                    DefaultTableModel tblmodel = (DefaultTableModel)CartTable.getModel();
                                    tblmodel.addRow(data);
                                    edtID.setText("Product ID");
                                    edtName.setText("Product Name");
                                    edtPrice.setText("Price");
//                                    edtQuan.setText("Quantity");
                              
                            }
                            else
                            {

                                JOptionPane.showMessageDialog(this, "Problem in Saving. Retry");
                            }
                            
        }

            catch(HeadlessException | ClassNotFoundException | SQLException e){
                
             JOptionPane.showMessageDialog(this, e.getMessage());
            }

        
        }
        

        
        
        
        
    }//GEN-LAST:event_btnAddCartMouseClicked

    private void ProdTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProdTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel tblmodel = (DefaultTableModel)ProdTable.getModel();
        
        String tblProductID = tblmodel.getValueAt(ProdTable.getSelectedRow(),0).toString();
        String tblProductName = tblmodel.getValueAt(ProdTable.getSelectedRow(),1).toString();
//        String tblQuantity = tblmodel.getValueAt(ProdTable.getSelectedRow(),2).toString();
        String tblPrice = tblmodel.getValueAt(ProdTable.getSelectedRow(),3).toString();
        
        
        edtID.setText(tblProductID);
        edtName.setText(tblProductName);
//        edtQuan.setText(tblQuantity);
        edtPrice.setText(tblPrice);
        
        
    
        
        
    }//GEN-LAST:event_ProdTableMouseClicked

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        // TODO add your handling code here:
        
        
        Payment pay = new Payment();
        pay.CountCustomerID_TotalAMOUNT();
        pay.show();
//        Amount();
    }//GEN-LAST:event_btnBuyActionPerformed

    private void btnShowProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowProductsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ProdTable.getModel();
        model.setRowCount(0);
        try {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "Rohan@2002");

            Statement stmt = con.createStatement();
            String query = "select * from product_info";
            try (ResultSet rs = stmt.executeQuery(query)) {
                while (rs.next()) {
                    String id = rs.getString("ProductID");
                    String name = rs.getString("ProductName");
                    String qun = rs.getString("Quantity");
                    String price = rs.getString("Price");
                    
                    model.addRow(new Object[] {id,name,qun,price});
                }
                //stmt.close();
                //con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            //e.printStackTrace();
        }
        
                
        
    }//GEN-LAST:event_btnShowProductsMouseClicked

    private void edtShowCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtShowCartActionPerformed
        // TODO add your handling code here:
        
        
        
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
        model.setRowCount(0);
        try {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "Rohan@2002");

            Statement stmt = con.createStatement();
            String query = "select * from carttable";
            try (ResultSet rs = stmt.executeQuery(query)) {
                while (rs.next()) {
                    String id = rs.getString("ProdID");
                    String name = rs.getString("ProdName");
                    String price = rs.getString("ProdPrice");
                    String quan = rs.getString("Quantity");
                    String total = rs.getString("Amount");
                    
                    model.addRow(new Object[] {id,name,price,quan,total});
                }
                //stmt.close();
                //con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            //e.printStackTrace();
        }
        

        
    }//GEN-LAST:event_edtShowCartActionPerformed

    private void btnAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCartActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnAddCartActionPerformed

    private void edtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtIDActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        
         DefaultTableModel tblmodel = (DefaultTableModel)CartTable.getModel();
        
        String ProductID = edtID.getText();
        int ID = Integer.parseInt(ProductID);
        try{
        
            
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InventoryControl.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement","root","Rohan@2002");
//            Statement smt4=con.createStatement();
            String query4 = "delete from carttable where ProdID = ?";
            PreparedStatement pstmt = con.prepareStatement(query4);
            pstmt.setInt(1, ID);
            pstmt.executeUpdate(); 
            
            
//            String query7 = "update product_info set Quantity = (Quantity + VirtualQuantity) where (Quantity >= 0) or (VirtualQuantity > 0)";
//            PreparedStatement pst3 = con.prepareStatement(query7);
//            pst3.executeUpdate();
            
            String query5 = "update product_info set Quantity = (Quantity+VirtualQuantity) where ((Quantity >= 0) and (VirtualQuantity > 0 )) and ProductID = ?";
             PreparedStatement pst3 = con.prepareStatement(query5);
             pst3.setInt(1, ID);
             pst3.executeUpdate();
            
            
            int i = 0;
            String query8 = "update product_info set VirtualQuantity = ? where ProductID = ?";
            PreparedStatement pst4 = con.prepareStatement(query8);
            pst4.setInt(1, i);
            pst4.setInt(2, ID);
            pst4.executeUpdate();
       
            
//            ps.setString(1,ProductID);
//            pstmt.executeUpdate();
            
            
            
            
        if(CartTable.getSelectedRowCount() == 1 || CartTable.getSelectedRowCount() > 1){
            tblmodel.removeRow(CartTable.getSelectedRow());

        }
        
        else{
            if(CartTable.getSelectedRowCount() == 0){
                 JOptionPane.showMessageDialog(this, "Table Is Empty");
            }
            else{
                 JOptionPane.showMessageDialog(this, "Plese Select Single Row For Delete");
            }
            
        }
        
        
        }
        catch(SQLException e){
        
            JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void CartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CartTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel tblmodel = (DefaultTableModel)CartTable.getModel();
        
        String tblProductID = tblmodel.getValueAt(CartTable.getSelectedRow(),0).toString();
        String tblProductName = tblmodel.getValueAt(CartTable.getSelectedRow(),1).toString();
//        String tblQuantity = tblmodel.getValueAt(ProdTable.getSelectedRow(),2).toString();
        String tblPrice = tblmodel.getValueAt(CartTable.getSelectedRow(),2).toString();
        String tblquan = tblmodel.getValueAt(CartTable.getSelectedRow(),3).toString();
        
        
        edtID.setText(tblProductID);
        edtName.setText(tblProductName);
        edtPrice.setText(tblPrice);
        edtQuan.setText(tblquan);
        

        
    }//GEN-LAST:event_CartTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
             DefaultTableModel tblmodel = (DefaultTableModel)CartTable.getModel();
        
        if(CartTable.getSelectedRow() != 1){
            
        try{
        
        String ProductID = edtID.getText();
        String ProductName = edtName.getText();
        String Quantity = edtQuan.getText();
        String Price = edtPrice.getText();
        
        int ID = Integer.parseInt(ProductID);
        int Quan = Integer.parseInt(Quantity);
        int Pri = Integer.parseInt(Price);
        
        
  
        
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventorymanagement","root","Rohan@2002");

        String query2 = "update carttable set Quantity = ? where ProdID = ?";
       
        PreparedStatement pstmt = con.prepareStatement(query2);
       
        
        pstmt.setInt(1, Quan);
        pstmt.setInt(2, ID);
        int success = pstmt.executeUpdate();
        

        
        if(success != 1){
            JOptionPane.showMessageDialog(this, "Problem in Updating ,Retry ");
        }
      

        

        tblmodel.setValueAt(ID, CartTable.getSelectedRow(), 0);
//        tblmodel.setValueAt(ProductName,CartTable.getSelectedRow() , 1);
        tblmodel.setValueAt(Quan,CartTable.getSelectedRow() , 3);
//        tblmodel.setValueAt(Pri,CartTable.getSelectedRow() , 2);    
            
        }
        
        
        
        catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }    
        
      
            
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnShowProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowProductsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnShowProductsActionPerformed

    private void edtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtSearchKeyTyped
        // TODO add your handling code here:
        String query = edtSearch.getText();
        filter(query);
    }//GEN-LAST:event_edtSearchKeyTyped

    private void edtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtSearchFocusGained
        // TODO add your handling code here:
        if(edtSearch.getText().equals("    Search")){
            
            edtSearch.setText("");
        }
    }//GEN-LAST:event_edtSearchFocusGained

    private void edtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtSearchFocusLost
        // TODO add your handling code here:
        if(edtQuan.getText().equals("")){
            
            edtQuan.setText("    Search");
        }
    }//GEN-LAST:event_edtSearchFocusLost

    
    public int Amount(){
        
        int sum=0;
             for(int i=0;i<CartTable.getRowCount();i++)
             {
                sum=sum+Integer.parseInt(CartTable.getValueAt(i,4).toString());
//                System.out.println(i);
             }
        return sum;
        
    }
    
    
    
    public int customerID(){
    
       
        
    return 0;
    }
    
    
    public void Print(){
    
    
         MessageFormat header =new MessageFormat("Invoice Print");
         MessageFormat footer = new MessageFormat("Page");
        try {
            ProdTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(InventoryControl.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    
    
    public void filter(String query){
        DefaultTableModel tblmodel = (DefaultTableModel)ProdTable.getModel();
        
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(tblmodel);
        ProdTable.setRowSorter(search);
      
        search.setRowFilter(RowFilter.regexFilter(query)) ;
                
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Purchase().setVisible(true);
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSTableMetro CartTable;
    private rojeru_san.complementos.RSTableMetro ProdTable;
    private rojerusan.RSMaterialButtonRectangle btnAddCart;
    private rojerusan.RSMaterialButtonRectangle btnBack;
    private rojerusan.RSMaterialButtonRectangle btnBuy;
    private rojerusan.RSMaterialButtonRectangle btnRemove;
    private rojerusan.RSMaterialButtonRectangle btnShowProducts;
    private rojerusan.RSMaterialButtonRectangle btnUpdate;
    private javax.swing.JTextField edtID;
    private javax.swing.JTextField edtName;
    private javax.swing.JTextField edtPrice;
    private javax.swing.JTextField edtQuan;
    private javax.swing.JTextField edtSearch;
    private rojerusan.RSMaterialButtonRectangle edtShowCart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
